buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}
plugins {
  id "com.liferay.app.docker" version "1.0.6"
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.classesDir = "${buildDir}/classes/jaxb"
    ext.schema = "src/main/resources/countries.xsd"

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir, schema: schema) {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }

            javac(destdir: classesDir, source: 1.6, target: 1.6, debug: true,
                    debugLevel: "lines,vars,source",
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/*.java")
                include(name: "*.java")
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/*.java")
                }
            }
        }
    }
}
jar {
  //  baseName = 'transfer'
    version = '0.0.1-SNAPSHOT'
    enabled = true

}
bootJar {
  //  baseName = 'gs-producing-web-service'
    version =  '0.1.0'
    from genJaxb.classesDir
    classifier = 'boot'
}

//
jar.into('META-INF/resources') {
    from('src/main/webapp')
}

//apply plugin: 'war'

group = 'com.springmvcjpa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8


repositories {
	mavenCentral()
}

configurations {
	providedRuntime
	jaxb
}
dependencies {
 	jaxb("org.glassfish.jaxb:jaxb-xjc:2.2.11")
    compile(files(genJaxb.classesDir).builtBy(genJaxb))
	// https://mvnrepository.com/artifact/jaxen/jaxen
	compile group: 'jaxen', name: 'jaxen', version: '1.1.6'
 	// https://mvnrepository.com/artifact/org.apache.xmlbeans/xmlbeans-xpath
	//compile group: 'org.apache.xmlbeans', name: 'xmlbeans-xpath', version: '2.6.0'	 
	// https://mvnrepository.com/artifact/org.jdom/jdom2
	compile group: 'org.jdom', name: 'jdom2', version: '2.0.6'
	// https://mvnrepository.com/artifact/wsdl4j/wsdl4j
compile group: 'wsdl4j', name: 'wsdl4j', version: '1.6.3'	
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web-services
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-web-services', version: '2.1.0.RELEASE'
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile("org.apache.commons:commons-pool2")
//	compile("org.springframework.boot:spring-boot-starter-thymeleaf")
	runtimeOnly('mysql:mysql-connector-java')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.springframework.boot:spring-boot-devtools')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	//jasper and jstl
	compile('org.apache.tomcat.embed:tomcat-embed-jasper','javax.servlet:jstl')
	
	testCompile('org.springframework.security:spring-security-test')
	//spring session
//	implementation('org.springframework.boot:spring-boot-starter-jdbc')
//	implementation('org.springframework.session:spring-session-jdbc')
//	implementation('org.springframework.session:spring-session-core')
	implementation('org.springframework.boot:spring-boot-starter-data-redis')
	compile('org.springframework.session:spring-session-data-redis')
// https://mvnrepository.com/artifact/org.apache.tomcat.embed/tomcat-embed-core
//	providedCompile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '7.0.'
// https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
//	providedCompile('javax.servletjavax.servlet-api:3.0.1')
//	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
//	compile('javax.servlet:servlet-api:2.5')

//cache
	compile("org.springframework.boot:spring-boot-starter-cache")


}
